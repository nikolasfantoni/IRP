plot(xc1[,1],xc1[,2],col = ' red ' , xlim = c(0,6),ylim = c(0,6),xlab = ' x1 ' ,ylab= ' x2 ', lty=1,main = 'Dados Amostrados' )
par(new=T)
plot(xc2[,1],xc2[,2],col = ' blue ' , xlim = c(0,6),ylim = c(0,6),xlab = '' ,ylab= '' , pch=1)
par(new=T)
plot(xc3[,1],xc3[,2],col = ' green ' , xlim = c(0,6),ylim = c(0,6),xlab = '' ,ylab= '' , pch=1)
par(new=T)
plot(xc4[,1],xc4[,2],col = ' black ' , xlim = c(0,6),ylim = c(0,6),xlab = '' ,ylab= '' , pch=1)
legend("topleft", legend=c("C1", "C2", "C3", "C4"),
col=c("red", "blue", "green", "black"), pch=c(1, 1, 1, 1), cex=0.8)
filled.contour(seqi, seqj, Mk, xlim = c(0,6),ylim = c(0,6), nlevels=8, col=c("red", "blue", "blue", "green", "green", "black", "yellow"))
#plotando dados finais de entrada
plot(xc1[,1],xc1[,2],col = ' red ' , xlim = c(0,6),ylim = c(0,6),xlab = ' x1 ' ,ylab= ' x2 ', lty=1,main = 'Dados Amostrados' )
par(new=T)
plot(xc2[,1],xc2[,2],col = ' blue ' , xlim = c(0,6),ylim = c(0,6),xlab = '' ,ylab= '' , pch=1)
par(new=T)
plot(xc3[,1],xc3[,2],col = ' green ' , xlim = c(0,6),ylim = c(0,6),xlab = '' ,ylab= '' , pch=1)
par(new=T)
plot(xc4[,1],xc4[,2],col = ' black ' , xlim = c(0,6),ylim = c(0,6),xlab = '' ,ylab= '' , pch=1)
legend("topleft", legend=c("C1", "C2", "C3", "C4"),
col=c("red", "blue", "green", "black"), pch=c(1, 1, 1, 1), cex=0.8)
par(new=T)
filled.contour(seqi, seqj, Mk, xlim = c(0,6),ylim = c(0,6), nlevels=8, col=c("red", "blue", "blue", "green", "green", "black", "yellow"))
#plotando dados finais de entrada
plot(xc1[,1],xc1[,2],col = ' red ' , xlim = c(0,6),ylim = c(0,6),xlab = ' x1 ' ,ylab= ' x2 ', lty=1,main = 'Dados Amostrados' )
par(new=T)
plot(xc2[,1],xc2[,2],col = ' blue ' , xlim = c(0,6),ylim = c(0,6),xlab = '' ,ylab= '' , pch=1)
par(new=T)
plot(xc3[,1],xc3[,2],col = ' green ' , xlim = c(0,6),ylim = c(0,6),xlab = '' ,ylab= '' , pch=1)
par(new=T)
plot(xc4[,1],xc4[,2],col = ' black ' , xlim = c(0,6),ylim = c(0,6),xlab = '' ,ylab= '' , pch=1)
legend("topleft", legend=c("C1", "C2", "C3", "C4"),
col=c("red", "blue", "green", "black"), pch=c(1, 1, 1, 1), cex=0.8)
#plotando as superfícies de contorno
par(new=T)
filled.contour(seqi, seqj, Mk, xlim = c(0,6),ylim = c(0,6), nlevels=8, col=c("red", "blue", "blue", "green", "green", "black", "yellow"))
#plotando as superfícies de contorno
par(new=T)
filled.contour(seqi, seqj, Mk, xlim = c(0,6),ylim = c(0,6), nlevels=8, col=c("red", "blue", "blue", "green", "green", "black", "yellow"))
filled.contour(seqi, seqj, Mk, xlim = c(0,6),ylim = c(0,6), nlevels=8, col=c("red", "blue", "blue", "green", "green", "black", "yellow"))
#plotando dados finais de entrada
plot(xc1[,1],xc1[,2],col = ' red ' , xlim = c(0,6),ylim = c(0,6),xlab = ' x1 ' ,ylab= ' x2 ', lty=1,main = 'Dados Amostrados' )
par(new=T)
plot(xc2[,1],xc2[,2],col = ' blue ' , xlim = c(0,6),ylim = c(0,6),xlab = '' ,ylab= '' , pch=1)
par(new=T)
plot(xc3[,1],xc3[,2],col = ' green ' , xlim = c(0,6),ylim = c(0,6),xlab = '' ,ylab= '' , pch=1)
par(new=T)
plot(xc4[,1],xc4[,2],col = ' black ' , xlim = c(0,6),ylim = c(0,6),xlab = '' ,ylab= '' , pch=1)
legend("topleft", legend=c("C1", "C2", "C3", "C4"),
col=c("red", "blue", "green", "black"), pch=c(1, 1, 1, 1), cex=0.8)
filled.contour(seqi, seqj, Mk, xlim = c(0,6),ylim = c(0,6), nlevels=8, col=c("red", "blue", "blue", "green", "green", "black", "yellow"))
#plotando as superfícies de contorno
par(new=T)
#plotando dados finais de entrada
plot(xc1[,1],xc1[,2],col = ' red ' , xlim = c(0,6),ylim = c(0,6),xlab = ' x1 ' ,ylab= ' x2 ', lty=1,main = 'Dados Amostrados' )
par(new=T)
plot(xc2[,1],xc2[,2],col = ' blue ' , xlim = c(0,6),ylim = c(0,6),xlab = '' ,ylab= '' , pch=1)
par(new=T)
plot(xc3[,1],xc3[,2],col = ' green ' , xlim = c(0,6),ylim = c(0,6),xlab = '' ,ylab= '' , pch=1)
par(new=T)
plot(xc4[,1],xc4[,2],col = ' black ' , xlim = c(0,6),ylim = c(0,6),xlab = '' ,ylab= '' , pch=1)
legend("topleft", legend=c("C1", "C2", "C3", "C4"),
col=c("red", "blue", "green", "black"), pch=c(1, 1, 1, 1), cex=0.8)
filled.contour(seqi, seqj, Mk, xlim = c(0,6),ylim = c(0,6), nlevels=8, col=c("red", "blue", "blue", "green", "green", "gray", "gray"))
filled.contour(seqi, seqj, Mk, xlim = c(0,6),ylim = c(0,6), nlevels=6, col=c("red", "blue", "green", "gray"))
filled.contour(seqi, seqj, Mk, xlim = c(0,6),ylim = c(0,6), nlevels=6, col=c("red", "blue", "green", "gray"))
filled.contour(seqi, seqj, Mk, xlim = c(0,6),ylim = c(0,6), nlevels=8, col=c("red", "blue", "green", "gray"))
filled.contour(seqi, seqj, Mk, xlim = c(0,6),ylim = c(0,6), nlevels=8, col=c("red", "blue", "green", "gray"))
filled.contour(seqi, seqj, Mk, xlim = c(0,6),ylim = c(0,6), levels=8, col=c("red", "blue", "green", "gray"))
filled.contour(seqi, seqj, Mk, xlim = c(0,6),ylim = c(0,6), levels=12, col=c("red", "blue", "green", "gray"))
filled.contour(seqi, seqj, Mk, xlim = c(0,6),ylim = c(0,6), levels=12)
filled.contour(seqi, seqj, Mk, xlim = c(0,6),ylim = c(0,6), nlevels=12)
filled.contour(seqi, seqj, Mk, xlim = c(0,6),ylim = c(0,6), nlevels=5,  col=c("red", "blue", "green", "gray"))
filled.contour(seqi, seqj, Mk, xlim = c(0,6),ylim = c(0,6), nlevels=4,  col=c("red", "blue", "green", "gray"))
filled.contour(seqi, seqj, Mk, xlim = c(0,6),ylim = c(0,6), nlevels=5,  col=c("red", "blue", "green", "gray"))
filled.contour(seqi, seqj, Mk, xlim = c(0,6),ylim = c(0,6), nlevels=4,  col=c("red", "blue", "green"))
filled.contour(seqi, seqj, Mk, xlim = c(0,6),ylim = c(0,6), nlevels=8,  col=c("red", "blue", "green"))
filled.contour(seqi, seqj, Mk, xlim = c(0,6),ylim = c(0,6), nlevels=8,  col=c("red", "blue", "blue", "green", "green","gray"))
#plotando dados finais de entrada
plot(xc1[,1],xc1[,2],col = ' red ' , xlim = c(0,6),ylim = c(0,6),xlab = ' x1 ' ,ylab= ' x2 ', lty=1,main = 'Dados Amostrados' )
par(new=T)
plot(xc2[,1],xc2[,2],col = ' blue ' , xlim = c(0,6),ylim = c(0,6),xlab = '' ,ylab= '' , pch=1)
par(new=T)
plot(xc3[,1],xc3[,2],col = ' green ' , xlim = c(0,6),ylim = c(0,6),xlab = '' ,ylab= '' , pch=1)
par(new=T)
plot(xc4[,1],xc4[,2],col = ' gray ' , xlim = c(0,6),ylim = c(0,6),xlab = '' ,ylab= '' , pch=1)
legend("topleft", legend=c("C1", "C2", "C3", "C4"),
col=c("red", "blue", "green", "black"), pch=c(1, 1, 1, 1), cex=0.8)
filled.contour(seqi, seqj, Mk, xlim = c(0,6),ylim = c(0,6), nlevels=8,  col=c("red", "blue", "blue", "green", "green","gray"))
filled.contour(seqi, seqj, Mk, xlim = c(0,6),ylim = c(0,6), nlevels=8,
las="vertical", col=c("red", "blue", "blue", "green", "green","gray"))
filled.contour(seqi, seqj, Mk, xlim = c(0,6),ylim = c(0,6), nlevels=8,
las=2, col=c("red", "blue", "blue", "green", "green","gray"))
filled.contour(seqi, seqj, Mk, xlim = c(0,6),ylim = c(0,6), nlevels=8,
las=0, col=c("red", "blue", "blue", "green", "green","gray"))
#plotando dados finais de entrada
plot(xc1[,1],xc1[,2],col = ' red ' , xlim = c(0,6),ylim = c(0,6),xlab = ' x1 ' ,ylab= ' x2 ', lty=1,main = 'Dados Amostrados' )
par(new=T)
plot(xc2[,1],xc2[,2],col = ' blue ' , xlim = c(0,6),ylim = c(0,6),xlab = '' ,ylab= '' , pch=1)
par(new=T)
plot(xc3[,1],xc3[,2],col = ' green ' , xlim = c(0,6),ylim = c(0,6),xlab = '' ,ylab= '' , pch=1)
par(new=T)
plot(xc4[,1],xc4[,2],col = ' gray ' , xlim = c(0,6),ylim = c(0,6),xlab = '' ,ylab= '' , pch=1)
legend("topleft", legend=c("C1", "C2", "C3", "C4"),
col=c("red", "blue", "green", "black"), pch=c(1, 1, 1, 1), cex=0.8)
filled.contour(seqi, seqj, Mk, xlim = c(0,6),ylim = c(0,6), nlevels=8,
las=0, col=c("red", "blue", "blue", "green", "green","gray"))
filled.contour(seqi, seqj, Mk, xlim = c(0,6),ylim = c(0,6), nlevels=8,
las=0, col=c("red", "blue", "blue", "green", "green","gray")
asp=1)
filled.contour(seqi, seqj, Mk, xlim = c(0,6),ylim = c(0,6), nlevels=8,
las=0, col=c("red", "blue", "blue", "green", "green","gray"),
asp=1)
filled.contour(seqi, seqj, Mk, xlim = c(0,6),ylim = c(0,6), nlevels=8,
las=0, col=c("red", "blue", "blue", "green", "green","gray"),
asp=1, key.title=0)
filled.contour(seqi, seqj, Mk, xlim = c(0,6),ylim = c(0,6), nlevels=8,
las=0, col=c("red", "blue", "blue", "green", "green","gray"),
asp=1, key.title=1)
filled.contour(seqi, seqj, Mk, xlim = c(0,6),ylim = c(0,6), nlevels=8,
las=0, col=c("red", "blue", "blue", "green", "green","gray"),
asp=1, key.title=5)
#plotando as superfícies de contorno
par(new=T)
filled.contour(seqi, seqj, Mk, xlim = c(0,6),ylim = c(0,6), nlevels=8,
las=0, col=c("red", "blue", "blue", "green", "green","gray"),
asp=1, key.title=5 layout(showlegend = FALSE))
layout(showlegend = FALSE)
filled.contour(seqi, seqj, Mk, xlim = c(0,6),ylim = c(0,6), nlevels=8,
las=0, col=c("red", "blue", "blue", "green", "green","gray"),
asp=1, key.title=5, showlegend = FALSE )
filled.contour(seqi, seqj, Mk, xlim = c(0,6),ylim = c(0,6), nlevels=8,
las=0, col=c("red", "blue", "blue", "green", "green","gray"),
asp=1, showlegend = FALSE )
filled.contour(seqi, seqj, Mk, xlim = c(0,6),ylim = c(0,6), nlevels=8,
las=0, col=c("red", "blue", "blue", "green", "green","gray"),
asp=1, showscale=FALSE )
filled.contour(seqi, seqj, Mk, xlim = c(0,6),ylim = c(0,6), nlevels=8,
las=0, col=c("red", "blue", "blue", "green", "green","gray"),
asp=1, marker = list(size = (abs(var3)*40)+8, color=spectral_color(var3)), showscale=FALSE)
filled.contour(seqi, seqj, Mk, xlim = c(0,6),ylim = c(0,6), nlevels=8,
las=0, col=c("red", "blue", "blue", "green", "green","gray"),
asp=1, marker = list(size = (abs(var3)*40)+8, color=spectral_color(var3)), showlegend=FALSE)
.filled.contour(seqi, seqj, Mk, xlim = c(0,6),ylim = c(0,6), nlevels=8,
las=0, col=c("red", "blue", "blue", "green", "green","gray"),
asp=1 )
.filled.contour(seqi, seqj, Mk, xlim = c(0,6),ylim = c(0,6), nlevels=8,
las=0, col=c("red", "blue", "blue", "green", "green","gray"),
asp=1 )
.filled.contour(seqi, seqj, Mk, levels=8,
las=0, col=c("red", "blue", "blue", "green", "green","gray"),
asp=1 )
.filled.contour(seqi, seqj, Mk, levels=8,
col=c("red", "blue", "blue", "green", "green","gray"))
#plotando dados finais de entrada
plot(xc1[,1],xc1[,2],col = ' red ' , xlim = c(0,6),ylim = c(0,6),xlab = ' x1 ' ,ylab= ' x2 ', lty=1,main = 'Dados Amostrados' )
.filled.contour(seqi, seqj, Mk, levels=8,
col=c("red", "blue", "blue", "green", "green","gray"))
#plotando dados finais de entrada
plot(xc1[,1],xc1[,2],col = ' red ' , xlim = c(0,6),ylim = c(0,6),xlab = ' x1 ' ,ylab= ' x2 ', lty=1,main = 'Dados Amostrados' )
par(new=T)
plot(xc2[,1],xc2[,2],col = ' blue ' , xlim = c(0,6),ylim = c(0,6),xlab = '' ,ylab= '' , pch=1)
par(new=T)
plot(xc3[,1],xc3[,2],col = ' green ' , xlim = c(0,6),ylim = c(0,6),xlab = '' ,ylab= '' , pch=1)
par(new=T)
plot(xc4[,1],xc4[,2],col = ' gray ' , xlim = c(0,6),ylim = c(0,6),xlab = '' ,ylab= '' , pch=1)
legend("topleft", legend=c("C1", "C2", "C3", "C4"),
col=c("red", "blue", "green", "black"), pch=c(1, 1, 1, 1), cex=0.8)
.filled.contour(seqi, seqj, Mk, levels=8,
col=c("red", "blue", "blue", "green", "green","gray"))
contour(seqi, seqj, Mk, xlim = c(0,6),ylim = c(0,6), nlevels=8,
las=0, col=c("red", "blue", "blue", "green", "green","gray"),
asp=1 )
.filled.contour(seqi, seqj, Mk, levels=8,
col=c("red", "blue", "blue", "green", "green","gray"))
filled.contour(seqi, seqj, Mk, xlim = c(0,6),ylim = c(0,6), nlevels=8,
las=0, col=c("red", "blue", "blue", "green", "green","gray"),
asp=1 )
#plotando dados finais de entrada
plot(xc1[,1],xc1[,2],col = ' red ' , xlim = c(0,6),ylim = c(0,6),xlab = ' x1 ' ,ylab= ' x2 ', lty=1,main = 'Dados Amostrados' )
par(new=T)
plot(xc2[,1],xc2[,2],col = ' blue ' , xlim = c(0,6),ylim = c(0,6),xlab = '' ,ylab= '' , pch=1)
par(new=T)
plot(xc3[,1],xc3[,2],col = ' green ' , xlim = c(0,6),ylim = c(0,6),xlab = '' ,ylab= '' , pch=1)
par(new=T)
plot(xc4[,1],xc4[,2],col = ' gray ' , xlim = c(0,6),ylim = c(0,6),xlab = '' ,ylab= '' , pch=1)
legend("topleft", legend=c("C1", "C2", "C3", "C4"),
col=c("red", "blue", "green", "black"), pch=c(1, 1, 1, 1), cex=0.8)
par(new=T)
filled.contour(seqi, seqj, Mk, xlim = c(0,6),ylim = c(0,6), nlevels=8,
las=0, col=c("red", "blue", "blue", "green", "green","gray"),
asp=1 )
image2D(seqi, seqj, Mk)
image2D(Mk)
image2D(Mk, contour=TRUE)
image2D(Mk, showscale=FALSE)
image2D(Mk, showscale=FALSE, showlegend=FALSE)
filled.contour(seqi, seqj, Mk, xlim = c(0,6),ylim = c(0,6), nlevels=8,
las=0, col=c("red", "blue", "blue", "green", "green","gray"),
asp=1 )
image2D(Mk, showscale=FALSE, showlegend=FALSE)
image2D(Mk, showscale=FALSE, showlegend=FALSE, colkey=(plot=FALSE))
image2D(Mk, col=c("red", "blue"), colkey=(plot=FALSE))
image2D(Mk, col=c("red", "blue", "green", "gray"), colkey=(plot=FALSE))
#plotando dados finais de entrada
plot(xc1[,1],xc1[,2],col = ' red ' , xlim = c(0,6),ylim = c(0,6),xlab = ' x1 ' ,ylab= ' x2 ', lty=1,main = 'Dados Amostrados' )
par(new=T)
plot(xc2[,1],xc2[,2],col = ' blue ' , xlim = c(0,6),ylim = c(0,6),xlab = '' ,ylab= '' , pch=1)
par(new=T)
plot(xc3[,1],xc3[,2],col = ' green ' , xlim = c(0,6),ylim = c(0,6),xlab = '' ,ylab= '' , pch=1)
par(new=T)
plot(xc4[,1],xc4[,2],col = ' gray ' , xlim = c(0,6),ylim = c(0,6),xlab = '' ,ylab= '' , pch=1)
legend("topleft", legend=c("C1", "C2", "C3", "C4"),
col=c("red", "blue", "green", "black"), pch=c(1, 1, 1, 1), cex=0.8)
#plotando as superfícies de contorno
par(new=T)
image2D(Mk, col=c("red", "blue", "green", "gray"), colkey=(plot=FALSE))
image2D(Mk, col=c("red", "blue", "green", "gray"),
colkey=(plot=FALSE),xlim = c(0,6),ylim = c(0,6),xlab = '' ,ylab= ''  )
image2D(Mk, col=c("red", "blue", "green", "gray"),
colkey=(plot=FALSE),xlim = c(0,6),ylim = c(0,6),xlab = '' ,ylab= ''  )
image2D(Mk, col=c("red", "blue", "green", "gray"),
colkey=(plot=FALSE),xlab = '' ,ylab= ''  )
image2D(Mk, x = seqi, y=seqj, col=c("red", "blue", "green", "gray"),
colkey=(plot=FALSE),xlab = '' ,ylab= ''  )
image2D(Mk, x = seqi, y=seqj, col=c("red", "blue", "green", "gray"),
colkey=(plot=FALSE),xlab = '' ,ylab= '', xlim = c(0,6),ylim = c(0,6)  )
#plotando as superfícies de contorno
par(new=T)
#plotando dados finais de entrada
plot(xc1[,1],xc1[,2],col = ' red ' , xlim = c(0,6),ylim = c(0,6),xlab = ' x1 ' ,ylab= ' x2 ', lty=1,main = 'Dados Amostrados' )
par(new=T)
plot(xc2[,1],xc2[,2],col = ' blue ' , xlim = c(0,6),ylim = c(0,6),xlab = '' ,ylab= '' , pch=1)
par(new=T)
plot(xc3[,1],xc3[,2],col = ' green ' , xlim = c(0,6),ylim = c(0,6),xlab = '' ,ylab= '' , pch=1)
par(new=T)
plot(xc4[,1],xc4[,2],col = ' gray ' , xlim = c(0,6),ylim = c(0,6),xlab = '' ,ylab= '' , pch=1)
legend("topleft", legend=c("C1", "C2", "C3", "C4"),
col=c("red", "blue", "green", "black"), pch=c(1, 1, 1, 1), cex=0.8)
#plotando dados finais de entrada
plot(xc1[,1],xc1[,2],col = ' red ' , xlim = c(0,6),ylim = c(0,6),xlab = ' x1 ' ,ylab= ' x2 ', lty=1,main = 'Dados Amostrados' )
par(new=T)
plot(xc2[,1],xc2[,2],col = ' blue ' , xlim = c(0,6),ylim = c(0,6),xlab = '' ,ylab= '' , pch=1)
par(new=T)
plot(xc3[,1],xc3[,2],col = ' green ' , xlim = c(0,6),ylim = c(0,6),xlab = '' ,ylab= '' , pch=1)
par(new=T)
plot(xc4[,1],xc4[,2],col = ' orange ' , xlim = c(0,6),ylim = c(0,6),xlab = '' ,ylab= '' , pch=1)
legend("topleft", legend=c("C1", "C2", "C3", "C4"),
col=c("red", "blue", "green", "black"), pch=c(1, 1, 1, 1), cex=0.8)
par(new=T)
image2D(Mk, x = seqi, y=seqj, col=c("red", "blue", "green", "orange"),
colkey=(plot=FALSE),xlab = '' ,ylab= '', xlim = c(0,6),ylim = c(0,6)  )
par(new=T)
#plotando dados finais de entrada
plot(xc1[,1],xc1[,2],col = ' red ' , xlim = c(0,6),ylim = c(0,6),xlab = ' x1 ' ,ylab= ' x2 ', lty=1,main = 'Dados Amostrados' )
par(new=T)
plot(xc2[,1],xc2[,2],col = ' blue ' , xlim = c(0,6),ylim = c(0,6),xlab = '' ,ylab= '' , pch=1)
par(new=T)
plot(xc3[,1],xc3[,2],col = ' green ' , xlim = c(0,6),ylim = c(0,6),xlab = '' ,ylab= '' , pch=1)
par(new=T)
plot(xc4[,1],xc4[,2],col = ' orange ' , xlim = c(0,6),ylim = c(0,6),xlab = '' ,ylab= '' , pch=1)
legend("topleft", legend=c("C1", "C2", "C3", "C4"),
col=c("red", "blue", "green", "black"), pch=c(1, 1, 1, 1), cex=0.8)
image2D(Mk, x = seqi, y=seqj, col=c("red", "blue", "green", "orange"),
colkey=(plot=FALSE),xlab = '' ,ylab= '', xlim = c(0,6),ylim = c(0,6)  )
#plotando as superfícies de contorno
par(new=T)
#plotando dados finais de entrada
plot(xc1[,1],xc1[,2],col = ' red ' , xlim = c(0,6),ylim = c(0,6),xlab = ' x1 ' ,ylab= ' x2 ', lty=1,main = 'Dados Amostrados' )
par(new=T)
plot(xc2[,1],xc2[,2],col = ' blue ' , xlim = c(0,6),ylim = c(0,6),xlab = '' ,ylab= '' , pch=1)
par(new=T)
plot(xc3[,1],xc3[,2],col = ' green ' , xlim = c(0,6),ylim = c(0,6),xlab = '' ,ylab= '' , pch=1)
par(new=T)
plot(xc4[,1],xc4[,2],col = ' orange ' , xlim = c(0,6),ylim = c(0,6),xlab = '' ,ylab= '' , pch=1)
legend("topleft", legend=c("C1", "C2", "C3", "C4"),
col=c("red", "blue", "green", "black"), pch=c(1, 1, 1, 1), cex=0.8)
#plotando dados finais de entrada
plot(xc1[,1],xc1[,2],col = ' red ' , xlim = c(0,6),ylim = c(0,6),xlab = ' x1 ' ,ylab= ' x2 ',
lty=1,main = 'Dados Amostrados',xaxs="i")
par(new=T)
plot(xc2[,1],xc2[,2],col = ' blue ' , xlim = c(0,6),ylim = c(0,6),xlab = '' ,ylab= '' , pch=1,
xaxs="i")
par(new=T)
plot(xc3[,1],xc3[,2],col = ' green ' , xlim = c(0,6),ylim = c(0,6),xlab = '' ,ylab= '' , pch=1,
xaxs="i")
par(new=T)
plot(xc4[,1],xc4[,2],col = ' orange ' , xlim = c(0,6),ylim = c(0,6),xlab = '' ,ylab= '' , pch=1,
xaxs="i")
legend("topleft", legend=c("C1", "C2", "C3", "C4"),
col=c("red", "blue", "green", "black"), pch=c(1, 1, 1, 1), cex=0.8)
image2D(Mk, x = seqi, y=seqj, col=c("red", "blue", "green", "orange"),
colkey=(plot=FALSE),xlab = '' ,ylab= '', xlim = c(0,6),ylim = c(0,6), xaxs='r' )
image2D(Mk, x = seqi, y=seqj, col=c("red", "blue", "green", "orange"),
colkey=(plot=FALSE),xlab = '' ,ylab= '', xlim = c(0,6),ylim = c(0,6), xaxs='r', yaxs='r' )
image2D(Mk, x = seqi, y=seqj, col=c("red", "blue", "green", "orange"),
colkey=(plot=FALSE),xlab = '' ,ylab= '', xlim = c(0,6),ylim = c(0,6), xaxs='i', yaxs='i' )
par(new=T)
plot(xc1[,1],xc1[,2],col = ' red ' , xlim = c(0,6),ylim = c(0,6),xlab = ' x1 ' ,ylab= ' x2 ',
lty=1,main = 'Dados Amostrados',xaxs="i",yaxs="i")
par(new=T)
plot(xc2[,1],xc2[,2],col = ' blue ' , xlim = c(0,6),ylim = c(0,6),xlab = '' ,ylab= '' , pch=1,
xaxs="i")
par(new=T)
plot(xc3[,1],xc3[,2],col = ' green ' , xlim = c(0,6),ylim = c(0,6),xlab = '' ,ylab= '' , pch=1,
xaxs="i")
par(new=T)
plot(xc4[,1],xc4[,2],col = ' orange ' , xlim = c(0,6),ylim = c(0,6),xlab = '' ,ylab= '' , pch=1,
xaxs="i")
legend("topleft", legend=c("C1", "C2", "C3", "C4"),
col=c("red", "blue", "green", "black"), pch=c(1, 1, 1, 1), cex=0.8)
#plotando as superfícies de contorno
par(new=T)
image2D(Mk, x = seqi, y=seqj, col=c("red", "blue", "green", "orange"),
colkey=(plot=FALSE),xlab = '' ,ylab= '', xlim = c(0,6),ylim = c(0,6), xaxs='i', yaxs='i' )
image2D(Mk, x = seqi, y=seqj, col=c("red", "blue", "green", "orange"),
colkey=(plot=FALSE),xlab = '' ,ylab= '', xlim = c(0,6),ylim = c(0,6), xaxs='i', yaxs='i' )
#plotando as superfícies de contorno
par(new=T)
#plotando dados finais de entrada
plot(xc1[,1],xc1[,2],col = ' red ' , xlim = c(0,6),ylim = c(0,6),xlab = ' x1 ' ,ylab= ' x2 ',
lty=1,main = 'Dados Amostrados',xaxs="i",yaxs="i")
par(new=T)
plot(xc2[,1],xc2[,2],col = ' blue ' , xlim = c(0,6),ylim = c(0,6),xlab = '' ,ylab= '' , pch=1,
xaxs="i", yaxs="i")
par(new=T)
plot(xc3[,1],xc3[,2],col = ' green ' , xlim = c(0,6),ylim = c(0,6),xlab = '' ,ylab= '' , pch=1,
xaxs="i", yaxs="i")
par(new=T)
plot(xc4[,1],xc4[,2],col = ' orange ' , xlim = c(0,6),ylim = c(0,6),xlab = '' ,ylab= '' , pch=1,
xaxs="i", yaxs="i")
legend("topleft", legend=c("C1", "C2", "C3", "C4"),
col=c("red", "blue", "green", "black"), pch=c(1, 1, 1, 1), cex=0.8, xaxs="i", yaxs="i")
legend("topleft", legend=c("C1", "C2", "C3", "C4"),
col=c("red", "blue", "green", "black"), pch=c(1, 1, 1, 1), cex=0.8)
legend("topleft", legend=c("C1", "C2", "C3", "C4"),
col=c("red", "blue", "green", "orange"), pch=c(1, 1, 1, 1), cex=0.8)
#plotando dados finais de entrada
plot(xc1[,1],xc1[,2],col = ' red ' , xlim = c(0,6),ylim = c(0,6),xlab = ' x1 ' ,ylab= ' x2 ',
lty=1,main = 'Dados Amostrados',xaxs="i",yaxs="i")
par(new=T)
plot(xc2[,1],xc2[,2],col = ' green ' , xlim = c(0,6),ylim = c(0,6),xlab = '' ,ylab= '' , pch=1,
xaxs="i", yaxs="i")
par(new=T)
plot(xc3[,1],xc3[,2],col = ' yellow ' , xlim = c(0,6),ylim = c(0,6),xlab = '' ,ylab= '' , pch=1,
xaxs="i", yaxs="i")
par(new=T)
plot(xc4[,1],xc4[,2],col = ' blue ' , xlim = c(0,6),ylim = c(0,6),xlab = '' ,ylab= '' , pch=1,
xaxs="i", yaxs="i")
legend("topleft", legend=c("C1", "C2", "C3", "C4"),
col=c("red", "green", "yellow", "blue"), pch=c(1, 1, 1, 1), cex=0.8)
image2D(Mk, x = seqi, y=seqj, col=c("red", "green", "yellow", "blue"),
colkey=(plot=FALSE),xlab = '' ,ylab= '', xlim = c(0,6),ylim = c(0,6), xaxs='i', yaxs='i' )
#plotando dados finais de entrada
plot(xc1[,1],xc1[,2],col = ' red ' , xlim = c(0,6),ylim = c(0,6),xlab = ' x1 ' ,ylab= ' x2 ',
lty=1,main = 'Resultado Das divisões de Classes',xaxs="i",yaxs="i")
par(new=T)
plot(xc2[,1],xc2[,2],col = ' green ' , xlim = c(0,6),ylim = c(0,6),xlab = '' ,ylab= '' , pch=1,
xaxs="i", yaxs="i")
par(new=T)
plot(xc3[,1],xc3[,2],col = ' yellow ' , xlim = c(0,6),ylim = c(0,6),xlab = '' ,ylab= '' , pch=1,
xaxs="i", yaxs="i")
par(new=T)
plot(xc4[,1],xc4[,2],col = ' blue ' , xlim = c(0,6),ylim = c(0,6),xlab = '' ,ylab= '' , pch=1,
xaxs="i", yaxs="i")
legend("topleft", legend=c("C1", "C2", "C3", "C4"),
col=c("red", "green", "yellow", "blue"), pch=c(19, 19, 19, 19), cex=0.8)
image2D(Mk, x = seqi, y=seqj, col=c("red", "green", "yellow", "blue"),
colkey=(plot=FALSE),xlab = '' ,ylab= '', xlim = c(0,6),ylim = c(0,6), xaxs='i', yaxs='i' )
#plotando as superfícies de contorno
par(new=T)
#plotando dados finais de entrada
plot(xc1[,1],xc1[,2],col = ' red ' , xlim = c(0,6),ylim = c(0,6),xlab = ' x1 ' ,ylab= ' x2 ',
lty=1,main = 'Resultado Das divisões de Classes',xaxs="i",yaxs="i")
par(new=T)
plot(xc2[,1],xc2[,2],col = ' green ' , xlim = c(0,6),ylim = c(0,6),xlab = '' ,ylab= '' , pch=1,
xaxs="i", yaxs="i")
par(new=T)
plot(xc3[,1],xc3[,2],col = ' yellow ' , xlim = c(0,6),ylim = c(0,6),xlab = '' ,ylab= '' , pch=1,
xaxs="i", yaxs="i")
par(new=T)
plot(xc4[,1],xc4[,2],col = ' blue ' , xlim = c(0,6),ylim = c(0,6),xlab = '' ,ylab= '' , pch=1,
xaxs="i", yaxs="i")
legend("topleft", legend=c("C1", "C2", "C3", "C4"),
col=c("red", "green", "yellow", "blue"), pch=c(19, 19, 19, 19), cex=0.8)
image2D(Mk, x = seqi, y=seqj, col=c("red", "green", "yellow", "blue"),
colkey=(plot=FALSE),xlab = '' ,ylab= '', xlim = c(0,6),ylim = c(0,6), xaxs='i', yaxs='i' )
#plotando dados finais de entrada
plot(xc1[,1],xc1[,2],col = ' red ' , xlim = c(0,6),ylim = c(0,6),xlab = ' x1 ' ,ylab= ' x2 ',
lty=1,main = 'Resultado Das divisões de Classes',xaxs="i",yaxs="i")
par(new=T)
plot(xc2[,1],xc2[,2],col = ' green ' , xlim = c(0,6),ylim = c(0,6),xlab = '' ,ylab= '' , pch=1,
xaxs="i", yaxs="i")
par(new=T)
plot(xc3[,1],xc3[,2],col = ' yellow ' , xlim = c(0,6),ylim = c(0,6),xlab = '' ,ylab= '' , pch=1,
xaxs="i", yaxs="i")
par(new=T)
plot(xc4[,1],xc4[,2],col = ' blue ' , xlim = c(0,6),ylim = c(0,6),xlab = '' ,ylab= '' , pch=1,
xaxs="i", yaxs="i")
legend("topleft", legend=c("C1", "C2", "C3", "C4"),
col=c("red", "green", "yellow", "blue"), pch=c(19, 19, 19, 19), cex=0.8)
image2D(Mk, x = seqi, y=seqj, col=c("red", "green", "yellow", "blue"),
colkey=(plot=FALSE),xlab = '' ,ylab= '', xlim = c(0,6),ylim = c(0,6), xaxs='i', yaxs='i' )
#plotando as superfícies de contorno
par(new=T)
#plotando dados finais de entrada
plot(xc1[,1],xc1[,2],col = ' red ' , xlim = c(0,6),ylim = c(0,6),xlab = ' x1 ' ,ylab= ' x2 ',
lty=1,main = 'Resultado Das divisões de Classes',xaxs="i",yaxs="i")
par(new=T)
plot(xc2[,1],xc2[,2],col = ' green ' , xlim = c(0,6),ylim = c(0,6),xlab = '' ,ylab= '' , pch=1,
xaxs="i", yaxs="i")
par(new=T)
plot(xc3[,1],xc3[,2],col = ' yellow ' , xlim = c(0,6),ylim = c(0,6),xlab = '' ,ylab= '' , pch=1,
xaxs="i", yaxs="i")
par(new=T)
plot(xc4[,1],xc4[,2],col = ' blue ' , xlim = c(0,6),ylim = c(0,6),xlab = '' ,ylab= '' , pch=1,
xaxs="i", yaxs="i")
legend("topleft", legend=c("C1", "C2", "C3", "C4"),
col=c("red", "green", "yellow", "blue"), pch=c(19, 19, 19, 19), cex=0.8)
#plotando dados finais de entrada
plot(xc1[,1],xc1[,2],col = ' red ' , xlim = c(0,6),ylim = c(0,6),xlab = ' x1 ' ,ylab= ' x2 ',
lty=1,main = 'Dados Amostrados',xaxs="i",yaxs="i")
par(new=T)
plot(xc2[,1],xc2[,2],col = ' green ' , xlim = c(0,6),ylim = c(0,6),xlab = '' ,ylab= '' , pch=1,
xaxs="i", yaxs="i")
par(new=T)
plot(xc3[,1],xc3[,2],col = ' yellow ' , xlim = c(0,6),ylim = c(0,6),xlab = '' ,ylab= '' , pch=1,
xaxs="i", yaxs="i")
par(new=T)
plot(xc4[,1],xc4[,2],col = ' blue ' , xlim = c(0,6),ylim = c(0,6),xlab = '' ,ylab= '' , pch=1,
xaxs="i", yaxs="i")
legend("topleft", legend=c("C1", "C2", "C3", "C4"),
col=c("red", "green", "yellow", "blue"), pch=c(1, 1, 1, 1), cex=0.8)
#plotando dados finais de entrada
plot(xc1[,1],xc1[,2],col = ' red ' , xlim = c(0,6),ylim = c(0,6),xlab = ' x1 ' ,ylab= ' x2 ',
lty=1,main = 'Dados Amostrados',xaxs="i",yaxs="i")
par(new=T)
plot(xc2[,1],xc2[,2],col = ' green ' , xlim = c(0,6),ylim = c(0,6),xlab = '' ,ylab= '' , pch=1,
xaxs="i", yaxs="i")
par(new=T)
plot(xc3[,1],xc3[,2],col = ' yellow ' , xlim = c(0,6),ylim = c(0,6),xlab = '' ,ylab= '' , pch=1,
xaxs="i", yaxs="i")
par(new=T)
plot(xc4[,1],xc4[,2],col = ' blue ' , xlim = c(0,6),ylim = c(0,6),xlab = '' ,ylab= '' , pch=1,
xaxs="i", yaxs="i")
legend("topleft", legend=c("C1", "C2", "C3", "C4"),
col=c("red", "green", "yellow", "blue"), pch=c(1, 1, 1, 1), cex=0.8)
#funcao para estimativa da densidade de 2 variáveis
pdf2var<-function(x,y,u1,u2,s1,s2,p) {(1/(2*pi*s1*s2*sqrt(1-(p^2))))*
exp((-(1)/(2*(1-(p^2))))*((((x-u1)^2)/((s1)^2))+(((y-u2)^2)/((s2)^2))-
((2*p*(x-u1)*(y-u2))/(s1*s2))))
}
#cáculo da média e desvio padrão das classes
u1<-rbind(mean(xc1[,1]),mean(xc1[,2]))
u2<-rbind(mean(xc2[,1]),mean(xc2[,2]))
u3<-rbind(mean(xc3[,1]),mean(xc3[,2]))
u4<-rbind(mean(xc4[,1]),mean(xc4[,2]))
s1<-rbind(sd(xc1[,1]),sd(xc1[,2]))
s2<-rbind(sd(xc2[,1]),sd(xc2[,2]))
s3<-rbind(sd(xc3[,1]),sd(xc3[,2]))
s4<-rbind(sd(xc4[,1]),sd(xc4[,2]))
#cálculo covariâncias e coeficientes de correlação
covc1 <- cov(xc1[,1],xc1[,2])
pc1 <- covc1/sqrt(prod(s1^2))
covc2 <- cov(xc2[,1],xc2[,2])
pc2 <- covc2/sqrt(prod(s2^2))
covc3 <- cov(xc3[,1],xc3[,2])
pc3 <- covc3/sqrt(prod(s3^2))
covc4 <- cov(xc4[,1],xc4[,2])
pc4 <- covc4/sqrt(prod(s4^2))
#estimando as densidades em cada ponto de um grid
seqi<-seq(0.06,6,0.06)
seqj<-seq(0.06,6,0.06)
M1 <- matrix(0,nrow=length(seqi),ncol=length(seqj))
M2 <- matrix(0,nrow=length(seqi),ncol=length(seqj))
M3 <- matrix(0,nrow=length(seqi),ncol=length(seqj))
M4 <- matrix(0,nrow=length(seqi),ncol=length(seqj))
ci<-0
for (i in seqi){
ci<-ci+1
cj<-0
for(j in seqj)
{
cj<-cj+1
M1[ci,cj]<- pdf2var(i,j,mean(xc1[,1]),mean(xc1[,2]),sd(xc1[,1]),sd(xc1[,2]),pc1)
M2[ci,cj]<- pdf2var(i,j,mean(xc2[,1]),mean(xc2[,2]),sd(xc2[,1]),sd(xc2[,2]),pc2)
M3[ci,cj]<- pdf2var(i,j,mean(xc3[,1]),mean(xc3[,2]),sd(xc3[,1]),sd(xc3[,2]),pc3)
M4[ci,cj]<- pdf2var(i,j,mean(xc4[,1]),mean(xc4[,2]),sd(xc4[,1]),sd(xc4[,2]),pc4)
}
}
#plotando as superfícies de contorno
contour2D(M1,seqi,seqj,colkey = NULL)
par(new=T)
contour2D(M2,seqi,seqj,colkey = NULL)
par(new=T)
contour2D(M3,seqi,seqj,colkey = NULL)
par(new=T)
contour2D(M4,seqi,seqj,colkey = NULL)
nc<-100
xc1<-matrix(rnorm(nc*2),ncol=2)*s1 + t(matrix((c(2,2)),ncol=nc,nrow=2))
#AULA 3 - Gaussiana no espaço R²
rm(list=ls())
library('plot3D')
# definição dos dados duas dimensoes
s1<-0.6
s2<-0.8
s3<-0.2
s4<-1
nc<-100
xc1<-matrix(rnorm(nc*2),ncol=2)*s1 + t(matrix((c(2,2)),ncol=nc,nrow=2))
xc2<-matrix(rnorm(nc*2),ncol=2)*s2 + t(matrix((c(4,4)),ncol=nc,nrow=2))
xc3<-matrix(rnorm(nc*2),ncol=2)*s3 + t(matrix((c(2,4)),ncol=nc,nrow=2))
xc4<-matrix(rnorm(nc*2),ncol=2)*s4 + t(matrix((c(4,2)),ncol=nc,nrow=2))
